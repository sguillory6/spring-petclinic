buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.5'
//        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

plugins {
    id "org.sonarqube" version '2.5'
    id 'com.palantir.docker' version '0.19.2'
}

apply plugin: "java"
apply plugin: "war"
apply plugin: "jacoco"
apply plugin: 'com.bmuschko.tomcat'
//apply plugin: 'docker'
apply plugin: 'maven-publish'


version = buildVersion
description = "spring-petclinic"


sourceCompatibility = 1.9
targetCompatibility = 1.9

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'joda-time:joda-time:2.8.1'
    compile 'joda-time:joda-time-hibernate:1.4'
    compile 'org.aspectj:aspectjrt:1.8.6'
    compile 'org.hibernate:hibernate-entitymanager:4.3.10.Final'
    compile 'org.hibernate:hibernate-validator:5.1.3.Final'
    compile "org.springframework:spring-context-support:4.1.6.RELEASE"
    compile "org.springframework:spring-jdbc:4.1.6.RELEASE"
    compile "org.springframework:spring-orm:4.1.6.RELEASE"
    compile "org.springframework:spring-webmvc:4.1.6.RELEASE"
    compile 'org.springframework.data:spring-data-jpa:1.8.1.RELEASE'
    compile 'com.rometools:rome:1.5.0'
    compile 'javax.xml.bind:jaxb-api:2.3.0'
    compile 'com.sun.xml.bind:jaxb-core:2.3.0'
    compile 'com.sun.xml.bind:jaxb-impl:2.3.0'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    runtime 'mysql:mysql-connector-java:5.1.35'
    compile 'org.aspectj:aspectjweaver:1.8.6'
    runtime 'org.jadira.usertype:usertype.core:3.1.0.GA'
    runtime "org.springframework:spring-oxm:4.1.6.RELEASE"
    runtime 'org.slf4j:slf4j-api:1.7.12'
    runtime 'ch.qos.logback:logback-classic:1.1.3'
    runtime 'org.apache.tomcat:tomcat-jdbc:8.0.23'
    runtime 'net.sf.ehcache:ehcache:2.10.0'
    runtime 'com.github.dandelion:dandelion-core:1.0.0'
    runtime 'com.github.dandelion:dandelion-jsp:1.0.0'
    runtime 'com.github.dandelion:datatables-core:1.0.0'
    runtime 'com.github.dandelion:datatables-jsp:1.0.0'
    runtime 'com.github.dandelion:datatables-export-itext:1.0.0'
    runtime "org.springframework:spring-web:4.1.6.RELEASE"
    runtime 'org.apache.taglibs:taglibs-standard:1.2.5'
    runtime 'org.apache.taglibs:taglibs-standard-impl:1.2.5'
    runtime 'javax.servlet:jstl:1.1.1'
    runtime 'com.amazonaws:aws-xray-recorder-sdk-core:1.0.3-beta'
    runtime 'com.sun.activation:javax.activation:1.2.0'

    testCompile 'junit:junit:4.12'
    testCompile "org.springframework:spring-test:4.1.6.RELEASE"
    testCompile "org.hamcrest:hamcrest-all:1.3"

    testRuntime 'org.apache.geronimo.specs:geronimo-el_2.2_spec:1.0.4'
    testRuntime 'org.apache.tomcat:tomcat-jasper-el:8.0.23'

    def tomcatVersion = '8.0.23'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

test {
    // enable TestNG support (default is JUnit)
    //useTestNG()

    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}


tomcat {
    httpPort = 8090
    contextPath = 'spring-petclinic'
}

jacoco {
    toolVersion = "0.8.1"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}


sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000/"
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'org.springframework.samples'
            artifactId 'spring-petclinic'
            from components.java

	    artifact sourceJar {
	        classifier 'sources'
	    }
        }
    }
    repositories {
        maven {
            credentials {
                username 'admin'
                password 'admin123'
            }
            url "http://localhost:8081/nexus/content/repositories/stang-releases"
            if (project.version.endsWith('-SNAPSHOT')) {
                url "http://localhost:8085/nexus/content/repositories/stang-snapshots"
            }
	    else {
                url "http://localhost:8085/nexus/content/repositories/stang-releases"
            }
        }
    }
}


//docker {
//    baseImage "tomcat:9"
//    maintainer 'Stan Guillory "stan.guillory@wnco.com"'
//}
//
//task petclinicDocker(type: Docker) {
//    dependsOn build
//    applicationName = 'spring-petclinic'
//    tagVersion = '1.0.0'
//    addFile('./build/libs', '/usr/local/tomcat/webapps')
//}

docker {
    name "spring-petclinic:1.0.3"
    copySpec.from("build/libs").into("/usr/local/tomcat/webapps")
}